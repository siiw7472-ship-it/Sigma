-- Illusion Hub - Simple Working Detection
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ProximityPromptService = game:GetService("ProximityPromptService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Variables
local basePosition = nil
local isBaseSet = false
local monitoring = false
local escaping = false
local laserCape = nil
local Net = nil
local PlayerMouse = nil
local promptConnection = nil

-- Find laser cape
local function findLaserCape()
    for _, tool in pairs(player.Backpack:GetChildren()) do
        if tool:IsA("Tool") and (tool.Name:lower():find("laser") or tool.Name:lower():find("cape")) then
            return tool
        end
    end
    
    if player.Character then
        for _, tool in pairs(player.Character:GetChildren()) do
            if tool:IsA("Tool") and (tool.Name:lower():find("laser") or tool.Name:lower():find("cape")) then
                return tool
            end
        end
    end
    return nil
end

-- Equip laser
local function equipLaser()
    laserCape = findLaserCape()
    if laserCape and laserCape.Parent == player.Backpack then
        player.Character.Humanoid:EquipTool(laserCape)
        return true
    end
    return false
end

-- Shoot laser
local function shootLaser()
    local character = player.Character
    if not character then return end
    
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if not rootPart then return end
    
    -- Load modules
    if not Net or not PlayerMouse then
        pcall(function()
            if ReplicatedStorage:FindFirstChild("Packages") then
                if ReplicatedStorage.Packages:FindFirstChild("Net") then
                    Net = require(ReplicatedStorage.Packages.Net)
                end
                if ReplicatedStorage.Packages:FindFirstChild("PlayerMouse") then
                    PlayerMouse = require(ReplicatedStorage.Packages.PlayerMouse)
                end
            end
        end)
    end
    
    -- Shoot
    pcall(function()
        if Net and PlayerMouse then
            PlayerMouse.Hit = {Position = rootPart.Position}
            PlayerMouse.Target = rootPart
            Net:RemoteEvent("UseItem"):FireServer(rootPart.Position, rootPart)
            print("Laser fired")
        end
    end)
    
    pcall(function()
        if laserCape and laserCape.Parent == character then
            laserCape:Activate()
        end
    end)
end

-- Simple god mode
local function enableGod()
    local character = player.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.MaxHealth = math.huge
            humanoid.Health = math.huge
            
            -- Simple protection
            spawn(function()
                while escaping do
                    if humanoid and humanoid.Parent then
                        humanoid.Health = humanoid.MaxHealth
                        humanoid.PlatformStand = false
                    end
                    task.wait(0.1)
                end
            end)
        end
    end
end

local function disableGod()
    local character = player.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.MaxHealth = 100
            humanoid.Health = 100
        end
    end
end

-- Medium speed safe tween
local function safeGoToBase()
    if not basePosition or escaping then return end
    
    local character = player.Character
    if not character then return end
    
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if not rootPart then return end
    
    escaping = true
    enableGod()
    
    print("Starting safe tween")
    status.Text = "Escaping to base..."
    status.TextColor3 = Color3.fromRGB(255, 100, 0)
    
    local startPos = rootPart.Position
    local targetPos = basePosition.Position
    local distance = (startPos - targetPos).Magnitude
    
    -- Medium speed (not too fast for anticheat)
    local tweenTime = math.clamp(distance / 70, 2, 5) -- 70 studs per second
    
    -- Simple 3-phase tween
    -- Phase 1: Go up
    local phase1 = TweenService:Create(rootPart, 
        TweenInfo.new(0.8, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {CFrame = CFrame.new(startPos + Vector3.new(0, 50, 0))}
    )
    
    phase1:Play()
    
    phase1.Completed:Connect(function()
        -- Phase 2: Travel
        local phase2 = TweenService:Create(rootPart,
            TweenInfo.new(tweenTime, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut),
            {CFrame = CFrame.new(targetPos + Vector3.new(0, 30, 0))}
        )
        
        phase2:Play()
        
        phase2.Completed:Connect(function()
            -- Phase 3: Land
            local phase3 = TweenService:Create(rootPart,
                TweenInfo.new(0.6, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {CFrame = basePosition}
            )
            
            phase3:Play()
            
            phase3.Completed:Connect(function()
                rootPart.CFrame = basePosition
                shootLaser()
                
                print("Safe tween completed")
                status.Text = "Arrived safely!"
                status.TextColor3 = Color3.fromRGB(0, 255, 0)
                
                task.wait(2)
                disableGod()
                escaping = false
                
                -- Restart monitoring
                if isBaseSet then
                    task.wait(1)
                    status.Text = "Monitoring..."
                    status.TextColor3 = Color3.fromRGB(255, 255, 0)
                end
            end)
        end)
    end)
end

-- Simple working detection
local function startSimpleMonitoring()
    if monitoring then return end
    
    monitoring = true
    print("Starting simple proximity monitoring")
    
    promptConnection = ProximityPromptService.PromptTriggered:Connect(function(prompt, playerWhoTriggered)
        if playerWhoTriggered ~= player then return end
        if escaping then return end
        if not basePosition then 
            print("No base set")
            return 
        end
        
        print("PROMPT TRIGGERED:", prompt.ObjectText or "Unknown")
        
        local holdTime = prompt.HoldDuration or 3
        print("Hold time:", holdTime)
        
        status.Text = "PROMPT ACTIVE!"
        status.TextColor3 = Color3.fromRGB(255, 200, 0)
        
        -- Calculate when to shoot (near completion)
        local shootDelay = holdTime * 0.8 -- Shoot at 80% completion
        
        print("Will shoot laser in", shootDelay, "seconds")
        
        -- Wait and shoot at near completion
        spawn(function()
            task.wait(shootDelay)
            
            if monitoring and not escaping then
                print("SHOOTING LASER AT NEAR COMPLETION!")
                
                status.Text = "LASER FIRED - ESCAPING!"
                status.TextColor3 = Color3.fromRGB(255, 0, 0)
                
                -- Equip and shoot
                equipLaser()
                task.wait(0.1)
                shootLaser()
                
                -- Small delay then escape
                task.wait(0.3)
                safeGoToBase()
            end
        end)
    end)
end

-- Stop monitoring
local function stopSimpleMonitoring()
    monitoring = false
    
    if promptConnection then
        promptConnection:Disconnect()
        promptConnection = nil
    end
    
    print("Monitoring stopped")
end

-- GUI
if playerGui:FindFirstChild("IllusionHub") then
    playerGui:FindFirstChild("IllusionHub"):Destroy()
end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "IllusionHub"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 100)
frame.Position = UDim2.new(0.5, -100, 0.1, 0)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Parent = screenGui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = frame

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 25)
title.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
title.BorderSizePixel = 0
title.Text = "Illusion Hub"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextScaled = true
title.Font = Enum.Font.GothamBold
title.Parent = frame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 8)
titleCorner.Parent = title

local setBaseBtn = Instance.new("TextButton")
setBaseBtn.Size = UDim2.new(0.9, 0, 0, 22)
setBaseBtn.Position = UDim2.new(0.05, 0, 0.3, 0)
setBaseBtn.BackgroundColor3 = Color3.fromRGB(70, 130, 255)
setBaseBtn.BorderSizePixel = 0
setBaseBtn.Text = "Set Base"
setBaseBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
setBaseBtn.TextScaled = true
setBaseBtn.Font = Enum.Font.Gotham
setBaseBtn.Parent = frame

local setBtnCorner = Instance.new("UICorner")
setBtnCorner.CornerRadius = UDim.new(0, 4)
setBtnCorner.Parent = setBaseBtn

local monitorBtn = Instance.new("TextButton")
monitorBtn.Size = UDim2.new(0.9, 0, 0, 22)
monitorBtn.Position = UDim2.new(0.05, 0, 0.55, 0)
monitorBtn.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
monitorBtn.BorderSizePixel = 0
monitorBtn.Text = "Start Monitor"
monitorBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
monitorBtn.TextScaled = true
monitorBtn.Font = Enum.Font.Gotham
monitorBtn.Parent = frame

local monBtnCorner = Instance.new("UICorner")
monBtnCorner.CornerRadius = UDim.new(0, 4)
monBtnCorner.Parent = monitorBtn

local status = Instance.new("TextLabel")
status.Size = UDim2.new(0.9, 0, 0, 18)
status.Position = UDim2.new(0.05, 0, 0.8, 0)
status.BackgroundTransparency = 1
status.Text = "Set base first"
status.TextColor3 = Color3.fromRGB(200, 200, 200)
status.TextScaled = true
status.Font = Enum.Font.Gotham
status.Parent = frame

-- Set Base
setBaseBtn.MouseButton1Click:Connect(function()
    local character = player.Character
    if not character then return end
    
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if not rootPart then return end
    
    basePosition = rootPart.CFrame
    isBaseSet = true
    
    setBaseBtn.Text = "Base Set"
    setBaseBtn.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
    status.Text = "Base set - start monitor"
    status.TextColor3 = Color3.fromRGB(0, 255, 0)
    
    monitorBtn.BackgroundColor3 = Color3.fromRGB(255, 150, 0)
    
    print("Base set")
end)

-- Monitor
monitorBtn.MouseButton1Click:Connect(function()
    if not isBaseSet then
        status.Text = "Set base first!"
        status.TextColor3 = Color3.fromRGB(255, 0, 0)
        return
    end
    
    if not monitoring then
        startSimpleMonitoring()
        monitorBtn.Text = "Stop Monitor"
        monitorBtn.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        status.Text = "Monitoring..."
        status.TextColor3 = Color3.fromRGB(255, 255, 0)
    else
        stopSimpleMonitoring()
        monitorBtn.Text = "Start Monitor"
        monitorBtn.BackgroundColor3 = Color3.fromRGB(255, 150, 0)
        status.Text = "Monitoring stopped"
        status.TextColor3 = Color3.fromRGB(150, 150, 150)
    end
end)

-- Drag
local dragging = false
local dragStart = nil
local startPos = nil

title.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or 
       input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
    end
end)

title.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or 
                     input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(
            startPos.X.Scale, startPos.X.Offset + delta.X,
            startPos.Y.Scale, startPos.Y.Offset + delta.Y
        )
    end
end)

title.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or 
       input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)

-- Manual keybinds
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == Enum.KeyCode.R and isBaseSet and not escaping then
        safeGoToBase()
    elseif input.KeyCode == Enum.KeyCode.L then
        equipLaser()
        task.wait(0.1)
        shootLaser()
        print("Manual laser test")
    end
end)

-- Setup
spawn(function()
    task.wait(1)
    laserCape = findLaserCape()
    if laserCape then
        print("Laser cape found:", laserCape.Name)
        equipLaser()
    end
end)

-- Cleanup
player.CharacterRemoving:Connect(function()
    stopSimpleMonitoring()
    escaping = false
end)

print("Illusion Hub - Simple Working System Loaded")
print("How it works:")
print("1. Set base location")
print("2. Start monitoring")
print("3. Use any proximity prompt:")
print("   - Laser fires at 80% completion")
print("   - Safe medium-speed escape to base")
print("   - Auto-restarts monitoring")
print("Manual: R = Go to base, L = Test laser")
